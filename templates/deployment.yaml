apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.RollingUpdateMaxSurge}}
      maxUnavailable: {{.RollingUpdateMaxUnavailable}}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.AppLabelSelector}}
  template:
    metadata:
      labels:
        {{- range $key, $value := .Labels}}
        {{$key}}: {{$value}}
        {{- end}}
        version: {{.BuildVersion}}
      annotations:
        prometheus.io/scrape: "{{.Container.Metrics.Scrape}}"
        prometheus.io/path: "{{.Container.Metrics.Path}}"
        prometheus.io/port: "{{.Container.Metrics.Port}}"
        prometheus.io/scrape-nginx-sidecar: "true"
    spec:
      serviceAccount: {{.Name}}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{.Name}}
              topologyKey: kubernetes.io/hostname
        {{- if .PreferPreemptibles}}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: In
                values:
                - "true"
        {{- end}}
      {{- if .MountPayloadLogging }}
      initContainers:
      - name: init-myservice
        image: busybox:1.27.2
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'mkdir -p /var/log/fluentd-payload-logger/{{.Name}}']
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      {{- end}}
      containers:
      - name: {{.Name}}
        image: {{.Container.Repository}}/{{.Container.Name}}:{{.Container.Tag}}
        imagePullPolicy: IfNotPresent
        {{- if .Container.EnvironmentVariables }}
        env:
        {{- range $key, $value := .Container.EnvironmentVariables }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{.Container.CPURequest}}
            memory: {{.Container.MemoryRequest}}
          limits:
            cpu: {{.Container.CPULimit}}
            memory: {{.Container.MemoryLimit}}
        ports:
        - name: web
          containerPort: {{.Container.Port}}
        livenessProbe:
          httpGet:
            path: {{.Container.Liveness.Path}}
            port: web
          initialDelaySeconds: {{.Container.Liveness.InitialDelaySeconds}}
          timeoutSeconds: {{.Container.Liveness.TimeoutSeconds}}
        {{- if or .MountApplicationSecrets .MountConfigmap .MountPayloadLogging }}
        volumeMounts:
        {{- if .MountApplicationSecrets }}
        - name: app-secrets
          mountPath: {{.SecretMountPath}}
        {{- end }}
        {{- if .MountConfigmap }}
        - name: app-configs
          mountPath: {{.ConfigMountPath}}
        {{- end }}
        {{- if .MountPayloadLogging }}
        - name: pod-log
          mountPath: /var/log/travix
        {{- end }}
        {{- end }}
      {{- if .Sidecar.UseOpenrestySidecar }}
      - name: {{.Name}}-openresty
        image: {{.Sidecar.Image}}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: {{.Sidecar.CPURequest}}
            memory: {{.Sidecar.MemoryRequest}}
          limits:
            cpu: {{.Sidecar.CPULimit}}
            memory: {{.Sidecar.MemoryLimit}}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: nginx-liveness
          containerPort: 82
        - name: nginx-readiness
          containerPort: 81
        - name: nginx-prom
          containerPort: 9101
        env:
        - name: "OFFLOAD_TO_HOST"
          value: "localhost"
        - name: "OFFLOAD_TO_PORT"
          value: "{{.Container.Port}}"
        - name: "SERVICE_NAME"
          value: "{{.Name}}"
        - name: "NAMESPACE"
          value: "{{.Namespace}}"
        - name: "HEALT_CHECK_PATH"
          value: "{{.Container.Readiness.Path}}"
        {{- range $key, $value := .Sidecar.EnvironmentVariables }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ssl/private
        livenessProbe:
          httpGet:
            path: /liveness
            port: nginx-liveness
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: {{.Container.Readiness.Path}}
            port: https
            scheme: HTTPS
          initialDelaySeconds: {{.Container.Readiness.InitialDelaySeconds}}
          timeoutSeconds: {{.Container.Readiness.TimeoutSeconds}}
      {{- end }}
      volumes:
      - name: ssl-certificate
        secret:
          secretName: {{.Name}}-letsencrypt-certificate
      {{- if .MountApplicationSecrets }}
      - name: app-secrets
        secret:
          secretName: {{.Name}}-secrets
      {{- end }}
      {{- if .MountConfigmap }}
      - name: app-configs
        configMap:
          name: {{.Name}}-configs
      {{- end }}
      {{- if .MountPayloadLogging }}
      - name: pod-log
        hostPath:
          path: /var/log/fluentd-payload-logger/{{.Name}}
      - name: var-log
        hostPath:
          path: /var/log
      {{- end }}